// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pet/v1/pet.proto

#include "pet/v1/pet.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace pet {
namespace v1 {
constexpr Pet::Pet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pet_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , created_at_(nullptr)
  , pet_type_(0)
{}
struct PetDefaultTypeInternal {
  constexpr PetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PetDefaultTypeInternal() {}
  union {
    Pet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PetDefaultTypeInternal _Pet_default_instance_;
constexpr GetPetRequest::GetPetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pet_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPetRequestDefaultTypeInternal {
  constexpr GetPetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPetRequestDefaultTypeInternal() {}
  union {
    GetPetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPetRequestDefaultTypeInternal _GetPetRequest_default_instance_;
constexpr GetPetResponse::GetPetResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pet_(nullptr){}
struct GetPetResponseDefaultTypeInternal {
  constexpr GetPetResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPetResponseDefaultTypeInternal() {}
  union {
    GetPetResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPetResponseDefaultTypeInternal _GetPetResponse_default_instance_;
constexpr PutPetRequest::PutPetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pet_type_(0)
{}
struct PutPetRequestDefaultTypeInternal {
  constexpr PutPetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PutPetRequestDefaultTypeInternal() {}
  union {
    PutPetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PutPetRequestDefaultTypeInternal _PutPetRequest_default_instance_;
constexpr PutPetResponse::PutPetResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pet_(nullptr){}
struct PutPetResponseDefaultTypeInternal {
  constexpr PutPetResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PutPetResponseDefaultTypeInternal() {}
  union {
    PutPetResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PutPetResponseDefaultTypeInternal _PutPetResponse_default_instance_;
constexpr DeletePetRequest::DeletePetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pet_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeletePetRequestDefaultTypeInternal {
  constexpr DeletePetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeletePetRequestDefaultTypeInternal() {}
  union {
    DeletePetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeletePetRequestDefaultTypeInternal _DeletePetRequest_default_instance_;
constexpr DeletePetResponse::DeletePetResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct DeletePetResponseDefaultTypeInternal {
  constexpr DeletePetResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeletePetResponseDefaultTypeInternal() {}
  union {
    DeletePetResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeletePetResponseDefaultTypeInternal _DeletePetResponse_default_instance_;
}  // namespace v1
}  // namespace pet
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_pet_2fv1_2fpet_2eproto[7];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_pet_2fv1_2fpet_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_pet_2fv1_2fpet_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_pet_2fv1_2fpet_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pet::v1::Pet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pet::v1::Pet, pet_type_),
  PROTOBUF_FIELD_OFFSET(::pet::v1::Pet, pet_id_),
  PROTOBUF_FIELD_OFFSET(::pet::v1::Pet, name_),
  PROTOBUF_FIELD_OFFSET(::pet::v1::Pet, created_at_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pet::v1::GetPetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pet::v1::GetPetRequest, pet_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pet::v1::GetPetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pet::v1::GetPetResponse, pet_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pet::v1::PutPetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pet::v1::PutPetRequest, pet_type_),
  PROTOBUF_FIELD_OFFSET(::pet::v1::PutPetRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pet::v1::PutPetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pet::v1::PutPetResponse, pet_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pet::v1::DeletePetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pet::v1::DeletePetRequest, pet_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pet::v1::DeletePetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pet::v1::Pet)},
  { 9, -1, sizeof(::pet::v1::GetPetRequest)},
  { 15, -1, sizeof(::pet::v1::GetPetResponse)},
  { 21, -1, sizeof(::pet::v1::PutPetRequest)},
  { 28, -1, sizeof(::pet::v1::PutPetResponse)},
  { 34, -1, sizeof(::pet::v1::DeletePetRequest)},
  { 40, -1, sizeof(::pet::v1::DeletePetResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pet::v1::_Pet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pet::v1::_GetPetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pet::v1::_GetPetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pet::v1::_PutPetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pet::v1::_PutPetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pet::v1::_DeletePetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pet::v1::_DeletePetResponse_default_instance_),
};

const char descriptor_table_protodef_pet_2fv1_2fpet_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020pet/v1/pet.proto\022\006pet.v1\032\032google/type/"
  "datetime.proto\"\222\001\n\003Pet\022*\n\010pet_type\030\001 \001(\016"
  "2\017.pet.v1.PetTypeR\007petType\022\025\n\006pet_id\030\002 \001"
  "(\tR\005petId\022\022\n\004name\030\003 \001(\tR\004name\0224\n\ncreated"
  "_at\030\004 \001(\0132\025.google.type.DateTimeR\tcreate"
  "dAt\"&\n\rGetPetRequest\022\025\n\006pet_id\030\001 \001(\tR\005pe"
  "tId\"/\n\016GetPetResponse\022\035\n\003pet\030\001 \001(\0132\013.pet"
  ".v1.PetR\003pet\"O\n\rPutPetRequest\022*\n\010pet_typ"
  "e\030\001 \001(\0162\017.pet.v1.PetTypeR\007petType\022\022\n\004nam"
  "e\030\002 \001(\tR\004name\"/\n\016PutPetResponse\022\035\n\003pet\030\001"
  " \001(\0132\013.pet.v1.PetR\003pet\")\n\020DeletePetReque"
  "st\022\025\n\006pet_id\030\001 \001(\tR\005petId\"\023\n\021DeletePetRe"
  "sponse*q\n\007PetType\022\030\n\024PET_TYPE_UNSPECIFIE"
  "D\020\000\022\020\n\014PET_TYPE_CAT\020\001\022\020\n\014PET_TYPE_DOG\020\002\022"
  "\022\n\016PET_TYPE_SNAKE\020\003\022\024\n\020PET_TYPE_HAMSTER\020"
  "\0042\313\001\n\017PetStoreService\0229\n\006GetPet\022\025.pet.v1"
  ".GetPetRequest\032\026.pet.v1.GetPetResponse\"\000"
  "\0229\n\006PutPet\022\025.pet.v1.PutPetRequest\032\026.pet."
  "v1.PutPetResponse\"\000\022B\n\tDeletePet\022\030.pet.v"
  "1.DeletePetRequest\032\031.pet.v1.DeletePetRes"
  "ponse\"\000B\010Z\006pet/v1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_pet_2fv1_2fpet_2eproto_deps[1] = {
  &::descriptor_table_google_2ftype_2fdatetime_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_pet_2fv1_2fpet_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_pet_2fv1_2fpet_2eproto = {
  false, false, 825, descriptor_table_protodef_pet_2fv1_2fpet_2eproto, "pet/v1/pet.proto", 
  &descriptor_table_pet_2fv1_2fpet_2eproto_once, descriptor_table_pet_2fv1_2fpet_2eproto_deps, 1, 7,
  schemas, file_default_instances, TableStruct_pet_2fv1_2fpet_2eproto::offsets,
  file_level_metadata_pet_2fv1_2fpet_2eproto, file_level_enum_descriptors_pet_2fv1_2fpet_2eproto, file_level_service_descriptors_pet_2fv1_2fpet_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_pet_2fv1_2fpet_2eproto_getter() {
  return &descriptor_table_pet_2fv1_2fpet_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_pet_2fv1_2fpet_2eproto(&descriptor_table_pet_2fv1_2fpet_2eproto);
namespace pet {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PetType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_pet_2fv1_2fpet_2eproto);
  return file_level_enum_descriptors_pet_2fv1_2fpet_2eproto[0];
}
bool PetType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Pet::_Internal {
 public:
  static const ::google::type::DateTime& created_at(const Pet* msg);
};

const ::google::type::DateTime&
Pet::_Internal::created_at(const Pet* msg) {
  return *msg->created_at_;
}
void Pet::clear_created_at() {
  if (GetArenaForAllocation() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
Pet::Pet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pet.v1.Pet)
}
Pet::Pet(const Pet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pet_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pet_id().empty()) {
    pet_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pet_id(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new ::google::type::DateTime(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  pet_type_ = from.pet_type_;
  // @@protoc_insertion_point(copy_constructor:pet.v1.Pet)
}

inline void Pet::SharedCtor() {
pet_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&created_at_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&pet_type_) -
    reinterpret_cast<char*>(&created_at_)) + sizeof(pet_type_));
}

Pet::~Pet() {
  // @@protoc_insertion_point(destructor:pet.v1.Pet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Pet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pet_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
}

void Pet::ArenaDtor(void* object) {
  Pet* _this = reinterpret_cast< Pet* >(object);
  (void)_this;
}
void Pet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Pet::Clear() {
// @@protoc_insertion_point(message_clear_start:pet.v1.Pet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pet_id_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  pet_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pet.v1.PetType pet_type = 1 [json_name = "petType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_pet_type(static_cast<::pet::v1::PetType>(val));
        } else goto handle_unusual;
        continue;
      // string pet_id = 2 [json_name = "petId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_pet_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pet.v1.Pet.pet_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3 [json_name = "name"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pet.v1.Pet.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.type.DateTime created_at = 4 [json_name = "createdAt"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pet::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pet.v1.Pet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pet.v1.PetType pet_type = 1 [json_name = "petType"];
  if (this->_internal_pet_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_pet_type(), target);
  }

  // string pet_id = 2 [json_name = "petId"];
  if (!this->_internal_pet_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pet_id().data(), static_cast<int>(this->_internal_pet_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pet.v1.Pet.pet_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pet_id(), target);
  }

  // string name = 3 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pet.v1.Pet.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // .google.type.DateTime created_at = 4 [json_name = "createdAt"];
  if (this->_internal_has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::created_at(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pet.v1.Pet)
  return target;
}

size_t Pet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pet.v1.Pet)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pet_id = 2 [json_name = "petId"];
  if (!this->_internal_pet_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pet_id());
  }

  // string name = 3 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.type.DateTime created_at = 4 [json_name = "createdAt"];
  if (this->_internal_has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .pet.v1.PetType pet_type = 1 [json_name = "petType"];
  if (this->_internal_pet_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_pet_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Pet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Pet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Pet::GetClassData() const { return &_class_data_; }

void Pet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<Pet *>(to)->MergeFrom(
      static_cast<const Pet &>(from));
}


void Pet::MergeFrom(const Pet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pet.v1.Pet)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pet_id().empty()) {
    _internal_set_pet_id(from._internal_pet_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_created_at()) {
    _internal_mutable_created_at()->::google::type::DateTime::MergeFrom(from._internal_created_at());
  }
  if (from._internal_pet_type() != 0) {
    _internal_set_pet_type(from._internal_pet_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Pet::CopyFrom(const Pet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pet.v1.Pet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pet::IsInitialized() const {
  return true;
}

void Pet::InternalSwap(Pet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pet_id_, GetArenaForAllocation(),
      &other->pet_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pet, pet_type_)
      + sizeof(Pet::pet_type_)
      - PROTOBUF_FIELD_OFFSET(Pet, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Pet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pet_2fv1_2fpet_2eproto_getter, &descriptor_table_pet_2fv1_2fpet_2eproto_once,
      file_level_metadata_pet_2fv1_2fpet_2eproto[0]);
}

// ===================================================================

class GetPetRequest::_Internal {
 public:
};

GetPetRequest::GetPetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pet.v1.GetPetRequest)
}
GetPetRequest::GetPetRequest(const GetPetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pet_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pet_id().empty()) {
    pet_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pet_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pet.v1.GetPetRequest)
}

inline void GetPetRequest::SharedCtor() {
pet_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPetRequest::~GetPetRequest() {
  // @@protoc_insertion_point(destructor:pet.v1.GetPetRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pet_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPetRequest::ArenaDtor(void* object) {
  GetPetRequest* _this = reinterpret_cast< GetPetRequest* >(object);
  (void)_this;
}
void GetPetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pet.v1.GetPetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pet_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string pet_id = 1 [json_name = "petId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pet_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pet.v1.GetPetRequest.pet_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pet.v1.GetPetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pet_id = 1 [json_name = "petId"];
  if (!this->_internal_pet_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pet_id().data(), static_cast<int>(this->_internal_pet_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pet.v1.GetPetRequest.pet_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pet_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pet.v1.GetPetRequest)
  return target;
}

size_t GetPetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pet.v1.GetPetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pet_id = 1 [json_name = "petId"];
  if (!this->_internal_pet_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pet_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPetRequest::GetClassData() const { return &_class_data_; }

void GetPetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetPetRequest *>(to)->MergeFrom(
      static_cast<const GetPetRequest &>(from));
}


void GetPetRequest::MergeFrom(const GetPetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pet.v1.GetPetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pet_id().empty()) {
    _internal_set_pet_id(from._internal_pet_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPetRequest::CopyFrom(const GetPetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pet.v1.GetPetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPetRequest::IsInitialized() const {
  return true;
}

void GetPetRequest::InternalSwap(GetPetRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pet_id_, GetArenaForAllocation(),
      &other->pet_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pet_2fv1_2fpet_2eproto_getter, &descriptor_table_pet_2fv1_2fpet_2eproto_once,
      file_level_metadata_pet_2fv1_2fpet_2eproto[1]);
}

// ===================================================================

class GetPetResponse::_Internal {
 public:
  static const ::pet::v1::Pet& pet(const GetPetResponse* msg);
};

const ::pet::v1::Pet&
GetPetResponse::_Internal::pet(const GetPetResponse* msg) {
  return *msg->pet_;
}
GetPetResponse::GetPetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pet.v1.GetPetResponse)
}
GetPetResponse::GetPetResponse(const GetPetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_pet()) {
    pet_ = new ::pet::v1::Pet(*from.pet_);
  } else {
    pet_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pet.v1.GetPetResponse)
}

inline void GetPetResponse::SharedCtor() {
pet_ = nullptr;
}

GetPetResponse::~GetPetResponse() {
  // @@protoc_insertion_point(destructor:pet.v1.GetPetResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete pet_;
}

void GetPetResponse::ArenaDtor(void* object) {
  GetPetResponse* _this = reinterpret_cast< GetPetResponse* >(object);
  (void)_this;
}
void GetPetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pet.v1.GetPetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && pet_ != nullptr) {
    delete pet_;
  }
  pet_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pet.v1.Pet pet = 1 [json_name = "pet"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pet(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pet.v1.GetPetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pet.v1.Pet pet = 1 [json_name = "pet"];
  if (this->_internal_has_pet()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::pet(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pet.v1.GetPetResponse)
  return target;
}

size_t GetPetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pet.v1.GetPetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pet.v1.Pet pet = 1 [json_name = "pet"];
  if (this->_internal_has_pet()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pet_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPetResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPetResponse::GetClassData() const { return &_class_data_; }

void GetPetResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<GetPetResponse *>(to)->MergeFrom(
      static_cast<const GetPetResponse &>(from));
}


void GetPetResponse::MergeFrom(const GetPetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pet.v1.GetPetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_pet()) {
    _internal_mutable_pet()->::pet::v1::Pet::MergeFrom(from._internal_pet());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPetResponse::CopyFrom(const GetPetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pet.v1.GetPetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPetResponse::IsInitialized() const {
  return true;
}

void GetPetResponse::InternalSwap(GetPetResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(pet_, other->pet_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPetResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pet_2fv1_2fpet_2eproto_getter, &descriptor_table_pet_2fv1_2fpet_2eproto_once,
      file_level_metadata_pet_2fv1_2fpet_2eproto[2]);
}

// ===================================================================

class PutPetRequest::_Internal {
 public:
};

PutPetRequest::PutPetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pet.v1.PutPetRequest)
}
PutPetRequest::PutPetRequest(const PutPetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  pet_type_ = from.pet_type_;
  // @@protoc_insertion_point(copy_constructor:pet.v1.PutPetRequest)
}

inline void PutPetRequest::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pet_type_ = 0;
}

PutPetRequest::~PutPetRequest() {
  // @@protoc_insertion_point(destructor:pet.v1.PutPetRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PutPetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PutPetRequest::ArenaDtor(void* object) {
  PutPetRequest* _this = reinterpret_cast< PutPetRequest* >(object);
  (void)_this;
}
void PutPetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PutPetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PutPetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pet.v1.PutPetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  pet_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutPetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pet.v1.PetType pet_type = 1 [json_name = "petType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_pet_type(static_cast<::pet::v1::PetType>(val));
        } else goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pet.v1.PutPetRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PutPetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pet.v1.PutPetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pet.v1.PetType pet_type = 1 [json_name = "petType"];
  if (this->_internal_pet_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_pet_type(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pet.v1.PutPetRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pet.v1.PutPetRequest)
  return target;
}

size_t PutPetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pet.v1.PutPetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .pet.v1.PetType pet_type = 1 [json_name = "petType"];
  if (this->_internal_pet_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_pet_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutPetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PutPetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutPetRequest::GetClassData() const { return &_class_data_; }

void PutPetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PutPetRequest *>(to)->MergeFrom(
      static_cast<const PutPetRequest &>(from));
}


void PutPetRequest::MergeFrom(const PutPetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pet.v1.PutPetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_pet_type() != 0) {
    _internal_set_pet_type(from._internal_pet_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutPetRequest::CopyFrom(const PutPetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pet.v1.PutPetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutPetRequest::IsInitialized() const {
  return true;
}

void PutPetRequest::InternalSwap(PutPetRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  swap(pet_type_, other->pet_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutPetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pet_2fv1_2fpet_2eproto_getter, &descriptor_table_pet_2fv1_2fpet_2eproto_once,
      file_level_metadata_pet_2fv1_2fpet_2eproto[3]);
}

// ===================================================================

class PutPetResponse::_Internal {
 public:
  static const ::pet::v1::Pet& pet(const PutPetResponse* msg);
};

const ::pet::v1::Pet&
PutPetResponse::_Internal::pet(const PutPetResponse* msg) {
  return *msg->pet_;
}
PutPetResponse::PutPetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pet.v1.PutPetResponse)
}
PutPetResponse::PutPetResponse(const PutPetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_pet()) {
    pet_ = new ::pet::v1::Pet(*from.pet_);
  } else {
    pet_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pet.v1.PutPetResponse)
}

inline void PutPetResponse::SharedCtor() {
pet_ = nullptr;
}

PutPetResponse::~PutPetResponse() {
  // @@protoc_insertion_point(destructor:pet.v1.PutPetResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PutPetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete pet_;
}

void PutPetResponse::ArenaDtor(void* object) {
  PutPetResponse* _this = reinterpret_cast< PutPetResponse* >(object);
  (void)_this;
}
void PutPetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PutPetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PutPetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pet.v1.PutPetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && pet_ != nullptr) {
    delete pet_;
  }
  pet_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutPetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pet.v1.Pet pet = 1 [json_name = "pet"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pet(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PutPetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pet.v1.PutPetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pet.v1.Pet pet = 1 [json_name = "pet"];
  if (this->_internal_has_pet()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::pet(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pet.v1.PutPetResponse)
  return target;
}

size_t PutPetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pet.v1.PutPetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pet.v1.Pet pet = 1 [json_name = "pet"];
  if (this->_internal_has_pet()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pet_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutPetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PutPetResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutPetResponse::GetClassData() const { return &_class_data_; }

void PutPetResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<PutPetResponse *>(to)->MergeFrom(
      static_cast<const PutPetResponse &>(from));
}


void PutPetResponse::MergeFrom(const PutPetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pet.v1.PutPetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_pet()) {
    _internal_mutable_pet()->::pet::v1::Pet::MergeFrom(from._internal_pet());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutPetResponse::CopyFrom(const PutPetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pet.v1.PutPetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutPetResponse::IsInitialized() const {
  return true;
}

void PutPetResponse::InternalSwap(PutPetResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(pet_, other->pet_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutPetResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pet_2fv1_2fpet_2eproto_getter, &descriptor_table_pet_2fv1_2fpet_2eproto_once,
      file_level_metadata_pet_2fv1_2fpet_2eproto[4]);
}

// ===================================================================

class DeletePetRequest::_Internal {
 public:
};

DeletePetRequest::DeletePetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pet.v1.DeletePetRequest)
}
DeletePetRequest::DeletePetRequest(const DeletePetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pet_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pet_id().empty()) {
    pet_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pet_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pet.v1.DeletePetRequest)
}

inline void DeletePetRequest::SharedCtor() {
pet_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeletePetRequest::~DeletePetRequest() {
  // @@protoc_insertion_point(destructor:pet.v1.DeletePetRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeletePetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pet_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeletePetRequest::ArenaDtor(void* object) {
  DeletePetRequest* _this = reinterpret_cast< DeletePetRequest* >(object);
  (void)_this;
}
void DeletePetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeletePetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pet.v1.DeletePetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pet_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string pet_id = 1 [json_name = "petId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pet_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pet.v1.DeletePetRequest.pet_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pet.v1.DeletePetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pet_id = 1 [json_name = "petId"];
  if (!this->_internal_pet_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pet_id().data(), static_cast<int>(this->_internal_pet_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pet.v1.DeletePetRequest.pet_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pet_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pet.v1.DeletePetRequest)
  return target;
}

size_t DeletePetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pet.v1.DeletePetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pet_id = 1 [json_name = "petId"];
  if (!this->_internal_pet_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pet_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeletePetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeletePetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeletePetRequest::GetClassData() const { return &_class_data_; }

void DeletePetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeletePetRequest *>(to)->MergeFrom(
      static_cast<const DeletePetRequest &>(from));
}


void DeletePetRequest::MergeFrom(const DeletePetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pet.v1.DeletePetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pet_id().empty()) {
    _internal_set_pet_id(from._internal_pet_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeletePetRequest::CopyFrom(const DeletePetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pet.v1.DeletePetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePetRequest::IsInitialized() const {
  return true;
}

void DeletePetRequest::InternalSwap(DeletePetRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pet_id_, GetArenaForAllocation(),
      &other->pet_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pet_2fv1_2fpet_2eproto_getter, &descriptor_table_pet_2fv1_2fpet_2eproto_once,
      file_level_metadata_pet_2fv1_2fpet_2eproto[5]);
}

// ===================================================================

class DeletePetResponse::_Internal {
 public:
};

DeletePetResponse::DeletePetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pet.v1.DeletePetResponse)
}
DeletePetResponse::DeletePetResponse(const DeletePetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pet.v1.DeletePetResponse)
}

inline void DeletePetResponse::SharedCtor() {
}

DeletePetResponse::~DeletePetResponse() {
  // @@protoc_insertion_point(destructor:pet.v1.DeletePetResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeletePetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DeletePetResponse::ArenaDtor(void* object) {
  DeletePetResponse* _this = reinterpret_cast< DeletePetResponse* >(object);
  (void)_this;
}
void DeletePetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeletePetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeletePetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pet.v1.DeletePetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pet.v1.DeletePetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pet.v1.DeletePetResponse)
  return target;
}

size_t DeletePetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pet.v1.DeletePetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeletePetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeletePetResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeletePetResponse::GetClassData() const { return &_class_data_; }

void DeletePetResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<DeletePetResponse *>(to)->MergeFrom(
      static_cast<const DeletePetResponse &>(from));
}


void DeletePetResponse::MergeFrom(const DeletePetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pet.v1.DeletePetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeletePetResponse::CopyFrom(const DeletePetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pet.v1.DeletePetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePetResponse::IsInitialized() const {
  return true;
}

void DeletePetResponse::InternalSwap(DeletePetResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePetResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pet_2fv1_2fpet_2eproto_getter, &descriptor_table_pet_2fv1_2fpet_2eproto_once,
      file_level_metadata_pet_2fv1_2fpet_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace pet
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pet::v1::Pet* Arena::CreateMaybeMessage< ::pet::v1::Pet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pet::v1::Pet >(arena);
}
template<> PROTOBUF_NOINLINE ::pet::v1::GetPetRequest* Arena::CreateMaybeMessage< ::pet::v1::GetPetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pet::v1::GetPetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pet::v1::GetPetResponse* Arena::CreateMaybeMessage< ::pet::v1::GetPetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pet::v1::GetPetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::pet::v1::PutPetRequest* Arena::CreateMaybeMessage< ::pet::v1::PutPetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pet::v1::PutPetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pet::v1::PutPetResponse* Arena::CreateMaybeMessage< ::pet::v1::PutPetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pet::v1::PutPetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::pet::v1::DeletePetRequest* Arena::CreateMaybeMessage< ::pet::v1::DeletePetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pet::v1::DeletePetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::pet::v1::DeletePetResponse* Arena::CreateMaybeMessage< ::pet::v1::DeletePetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pet::v1::DeletePetResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
